{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP/F6ut94fEt5mmGBaalHdx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1961,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"LzNEURxf3I8W","executionInfo":{"status":"ok","timestamp":1714968693201,"user_tz":240,"elapsed":1552,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"3472aaac-d988-40b6-bcfc-bc7ece906b73"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Number of elements remaining:  185\n"]},{"output_type":"execute_result","data":{"text/plain":["   Loano_ID  Gender  Married  Dependents  Education  Self_Employed  \\\n","0  LP001003     1.0        1         1.0          1            0.0   \n","1  LP001005     1.0        1         0.0          1            1.0   \n","2  LP001006     1.0        1         0.0          0            0.0   \n","3  LP001008     1.0        0         0.0          1            0.0   \n","4  LP001013     1.0        1         0.0          0            0.0   \n","\n","   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0             4583             1508.0         128             360.0   \n","1             3000                0.0          66             360.0   \n","2             2583             2358.0         120             360.0   \n","3             6000                0.0         141             360.0   \n","4             2333             1516.0          95             360.0   \n","\n","   Credit_History  Property_Area  Loan_Status  \n","0             1.0            1.0            0  \n","1             1.0            0.0            1  \n","2             1.0            0.0            1  \n","3             1.0            0.0            1  \n","4             1.0            0.0            1  "],"text/html":["\n","  <div id=\"df-a58e6afb-80cc-4ea9-b1f0-68c1eb0d6bec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loano_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001003</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001005</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001006</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001008</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001013</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2333</td>\n","      <td>1516.0</td>\n","      <td>95</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a58e6afb-80cc-4ea9-b1f0-68c1eb0d6bec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a58e6afb-80cc-4ea9-b1f0-68c1eb0d6bec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a58e6afb-80cc-4ea9-b1f0-68c1eb0d6bec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e23f3df8-1210-470b-8706-ab1f963bf026\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e23f3df8-1210-470b-8706-ab1f963bf026')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e23f3df8-1210-470b-8706-ab1f963bf026 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loan","summary":"{\n  \"name\": \"loan\",\n  \"rows\": 185,\n  \"fields\": [\n    {\n      \"column\": \"Loano_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 185,\n        \"samples\": [\n          \"LP001144\",\n          \"LP001535\",\n          \"LP002603\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3645579071767287,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Married\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0228011581757657,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Self_Employed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2818438533955056,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ApplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1603,\n        \"min\": 150,\n        \"max\": 9703,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          3069,\n          3033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CoapplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2710.446612096784,\n        \"min\": 0.0,\n        \"max\": 33837.0,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          1255.0,\n          3333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LoanAmount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 9,\n        \"max\": 150,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          88,\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Amount_Term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.01681193031649,\n        \"min\": 60.0,\n        \"max\": 480.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.0,\n          240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_History\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37449535178375454,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Property_Area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.500117495008084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1961}],"source":["# Zachary Matheson\n","# 801095035\n","# Final Project\n","# https://github.com/zmathes1/Intro-to-Machine-Learning.git\n","\n","import numpy as np\n","import pandas as pd\n","import readline\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix\n","from sklearn import metrics\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.decomposition import PCA\n","from sklearn.datasets import load_breast_cancer\n","\n","from google.colab import drive\n","drive.mount ('/content/drive') # Fix issues connecting to file_path\n","file_path = '/content/drive/My Drive/Colab Notebooks/loan_data.csv'\n","\n","readline.clear_history()\n","\n","loan = pd.read_csv(file_path)\n","\n","# Mapping\n","loan['Loan_Status'] = loan['Loan_Status'].map({'yes': 1, 'no': 0})\n","loan['Property_Area'] = loan['Property_Area'].map({'Semirural': 2, 'Rural': 1, 'Urban': 0})\n","loan['Self_Employed'] = loan['Self_Employed'].map({'yes': 1, 'no': 0})\n","loan['Education'] = loan['Education'].map({'Graduate': 1, 'Not Graduate': 0})\n","loan['Married'] = loan['Married'].map({'yes': 1, 'no': 0})\n","loan['Gender'] = loan['Gender'].map({'Male': 1, 'Female': 0})\n","\n","# Cleaning dataset\n","loan = loan.dropna()\n","#Resetting index\n","loan.reset_index(drop=True, inplace=True)\n","\n","num_elements = loan.shape[0]\n","print(\"Number of elements remaining: \", num_elements) # We lose half of the elements\n","loan.head()"]},{"cell_type":"markdown","source":["Part 1. Using Gradient Descent"],"metadata":{"id":"tX9582A7wA1A"}},{"cell_type":"code","source":["# Splitting the dataset into training and testing sets\n","np.random.seed(0)\n","df_train, df_test = train_test_split(loan, train_size = 0.7, test_size = 0.3, random_state = 0)"],"metadata":{"id":"jmJhRPPJBGxN","executionInfo":{"status":"ok","timestamp":1714968693201,"user_tz":240,"elapsed":13,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1962,"outputs":[]},{"cell_type":"code","source":["# Numerical variables that will be used for training\n","num_varsa = ['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount', 'Loan_Amount_Term', 'Credit_History', 'Property_Area', 'Loan_Status' ]"],"metadata":{"id":"SXeydDTyBI59","executionInfo":{"status":"ok","timestamp":1714968693201,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1963,"outputs":[]},{"cell_type":"code","source":["# Separate features and labels for training\n","X_train = df_train[num_varsa].values[:, :-1]\n","y_train = df_train['Loan_Status'].values\n","m_train = len(y_train)\n","n_train = len(X_train)\n"],"metadata":{"id":"vU3a9nIIC4Rk","executionInfo":{"status":"ok","timestamp":1714968693202,"user_tz":240,"elapsed":13,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1964,"outputs":[]},{"cell_type":"code","source":["# Seperate features and labels for test\n","X_test = df_test[num_varsa].values[:, :-1]\n","y_test = df_test['Loan_Status'].values\n","#print(y_train)\n","m_test = len(y_test)\n","n_test = len(X_test)"],"metadata":{"id":"af4fBLG_hr8C","executionInfo":{"status":"ok","timestamp":1714968693202,"user_tz":240,"elapsed":13,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1965,"outputs":[]},{"cell_type":"code","source":["# Initializing\n","X_0train = np.ones((m_train,1))\n","X_0test = np.ones((m_test,1))\n","\n","X_1train = X_train.reshape(m_train, 11)\n","X_1test = X_test.reshape(m_test, 11)\n","\n","Xtrain = np.hstack((X_0train, X_1train))\n","Xtest = np.hstack((X_0test, X_1test))\n","\n","theta = np.zeros(12)\n","\n","m = len(loan)\n","print(len(loan))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_xPUCCsMiOCU","executionInfo":{"status":"ok","timestamp":1714968693202,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"c76be640-18b8-4164-f1a4-0cc5f4b5e031"},"execution_count":1966,"outputs":[{"output_type":"stream","name":"stdout","text":["185\n"]}]},{"cell_type":"code","source":["# Cost function\n","def compute_cost_train(X, y, theta):\n","    predictions = X.dot(theta)\n","    errors = np.subtract(predictions, y)\n","    sqrErrors = np.square(errors)\n","    J = 1 / (2 * m) * np.sum(sqrErrors)\n","    return J"],"metadata":{"id":"MizGpDE0iwbM","executionInfo":{"status":"ok","timestamp":1714968693202,"user_tz":240,"elapsed":11,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1967,"outputs":[]},{"cell_type":"code","source":["# Gradient descent\n","def gradient_descent(X, Xtest, y, y_test, theta, alpha, iterations):\n","    m_train = len(y_train)\n","    m_test = len(y_test)\n","    cost_history_train = np.zeros(iterations)\n","    cost_history_test = np.zeros(iterations)\n","\n","    for i in range(iterations):\n","        predictions = X.dot(theta)\n","        errors = np.subtract(predictions, y)\n","        gradients = (2/m_train) * X.transpose().dot(errors)\n","        theta -= alpha * gradients\n","\n","        train_loss = (1/m_train) * np.sum(np.square(X.dot(theta) - y))\n","        cost_history_train[i] = train_loss\n","\n","        val_loss = (1/m_test) * np.sum(np.square(Xtest.dot(theta) - y_test))\n","        cost_history_test[i] = val_loss\n","\n","    return theta, cost_history_train, cost_history_test"],"metadata":{"id":"zUPJdcqcjGDH","executionInfo":{"status":"ok","timestamp":1714968693202,"user_tz":240,"elapsed":11,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1968,"outputs":[]},{"cell_type":"code","source":["iterations =  1000\n","alpha = 0.000000001 # Alpha can be 0.00000001 or less for training model to work\n","theta, cost_history_train, cost_history_test = gradient_descent(Xtrain, Xtest, y_train, y_test, theta, alpha, iterations)\n","\n","print(\"Final theta (first 10) =\", theta[:10])\n","print(\"Final cost history (first 10) =\", cost_history_train[:10], cost_history_test[:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SkFc3etVjJUF","executionInfo":{"status":"ok","timestamp":1714968693202,"user_tz":240,"elapsed":10,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"1f915945-1cd7-4d2e-db79-70364bdd2e0b"},"execution_count":1969,"outputs":[{"output_type":"stream","name":"stdout","text":["Final theta (first 10) = [ 1.80681231e-07  1.81360851e-07  1.50017101e-07  1.44976801e-07\n","  1.61298017e-07 -4.74558978e-09  1.33576538e-04  1.77700979e-05\n","  1.84530038e-05  6.45908648e-05]\n","Final cost history (first 10) = [0.59545547 0.57257816 0.55138708 0.53175642 0.51356983 0.49671967\n"," 0.48110638 0.46663788 0.45322896 0.44080085] [0.66960339 0.64454046 0.62111809 0.59922327 0.57875104 0.55960389\n"," 0.54169124 0.52492893 0.50923874 0.49454799]\n"]}]},{"cell_type":"code","source":["plt.plot(cost_history_train, label=\"Training loss\")\n","plt.plot(cost_history_test, label=\"Validation loss\")\n","plt.xlabel(\"Iteration\")\n","plt.ylabel(\"Mean Squared Error\")\n","plt.legend()\n","plt.grid()\n","plt.title(\"Training and Validation Loss Over Iterations <Gradient Descent>\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"ztkct_KkqoIr","executionInfo":{"status":"ok","timestamp":1714968693757,"user_tz":240,"elapsed":564,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"ce0671a4-f8c0-4c25-db89-0da676120cbb"},"execution_count":1970,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# View values of NaN\n","# print(loan.isnull().sum())\n","# print(loan)"],"metadata":{"id":"0G8FZoCepBcF","executionInfo":{"status":"ok","timestamp":1714968693758,"user_tz":240,"elapsed":15,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1971,"outputs":[]},{"cell_type":"markdown","source":["Part 2. Using Normalization"],"metadata":{"id":"L4hDbYejwRgm"}},{"cell_type":"code","source":["scaler = MinMaxScaler()\n","\n","# Numerical variables that will be used for training\n","num_varsa = ['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount', 'Loan_Amount_Term', 'Credit_History', 'Property_Area', 'Loan_Status' ]\n","\n","df_train[num_varsa] = scaler.fit_transform(df_train[num_varsa])\n","df_test[num_varsa] = scaler.fit_transform(df_test[num_varsa])"],"metadata":{"id":"JJlGU8NAwY2D","executionInfo":{"status":"ok","timestamp":1714968693758,"user_tz":240,"elapsed":13,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1972,"outputs":[]},{"cell_type":"code","source":["# Separate features and labels for training\n","X_train1 = df_train[num_varsa].values[:, :-1]\n","y_train1 = df_train['Loan_Status'].values\n","m_train1 = len(y_train1)\n","n_train1 = len(X_train1)"],"metadata":{"id":"XoOe2VdVwdo0","executionInfo":{"status":"ok","timestamp":1714968693758,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1973,"outputs":[]},{"cell_type":"code","source":["# Seperate features and labels for test\n","X_test1 = df_test[num_varsa].values[:, :-1]\n","y_test1 = df_test['Loan_Status'].values\n","m_test1 = len(y_test1)\n","n_test1 = len(X_test1)"],"metadata":{"id":"1xS14W1WxWSB","executionInfo":{"status":"ok","timestamp":1714968693758,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1974,"outputs":[]},{"cell_type":"code","source":["# Initializing\n","X_0train1 = np.ones((m_train1,1))\n","X_0test1 = np.ones((m_test1,1))\n","\n","X_1train1 = X_train1.reshape(m_train1, 11)\n","X_1test1 = X_test1.reshape(m_test1, 11)\n","\n","Xtrain1 = np.hstack((X_0train1, X_1train1))\n","Xtest1 = np.hstack((X_0test1, X_1test1))\n","\n","theta1 = np.zeros(12)"],"metadata":{"id":"b_7ACLz4xau4","executionInfo":{"status":"ok","timestamp":1714968693759,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1975,"outputs":[]},{"cell_type":"code","source":["iterations1 =  1000\n","alpha1 = 0.01 # Alpha can be 0.001 or less for training model to work\n","theta, cost_history_train, cost_history_test = gradient_descent(Xtrain1, Xtest1, y_train1, y_test1, theta1, alpha1, iterations1)\n","\n","print(\"Final theta (first 10) =\", theta[:10])\n","print(\"Final cost history (first 10) =\", cost_history_train[:10], cost_history_test[:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rpAl8_6NxrXh","executionInfo":{"status":"ok","timestamp":1714968693759,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"2614dc44-cbbd-4e90-dc6f-dae5f6dd2eaf"},"execution_count":1976,"outputs":[{"output_type":"stream","name":"stdout","text":["Final theta (first 10) = [-0.00661401  0.05297617  0.01688769  0.0149375   0.08225726 -0.02765169\n","  0.05109721 -0.073411    0.07024178 -0.05698494]\n","Final cost history (first 10) = [0.54574013 0.48477665 0.43482372 0.39388342 0.36032045 0.33279626\n"," 0.31021525 0.29168064 0.27645841 0.26394775] [0.61492141 0.54724416 0.49097543 0.4441248  0.4050554  0.37242049\n"," 0.34511151 0.32221539 0.30297966 0.2867838 ]\n"]}]},{"cell_type":"code","source":["plt.plot(cost_history_train, label=\"Training loss\")\n","plt.plot(cost_history_test, label=\"Validation loss\")\n","plt.xlabel(\"Iteration\")\n","plt.ylabel(\"Mean Squared Error\")\n","plt.legend()\n","plt.grid()\n","plt.title(\"Training and Validation Loss Over Iterations <Normalization>\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"lp7-KLLcx_Yo","executionInfo":{"status":"ok","timestamp":1714968694364,"user_tz":240,"elapsed":613,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"5a475796-eebe-4cdd-fb16-06266cc8293d"},"execution_count":1977,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 3. Using Standardization"],"metadata":{"id":"_0kN4wTOx_Ik"}},{"cell_type":"code","source":["scaler = StandardScaler()\n","\n","# Numerical variables that will be used for training\n","num_varsa = ['Gender', 'Married', 'Dependents', 'Education', 'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount', 'Loan_Amount_Term', 'Credit_History', 'Property_Area', 'Loan_Status' ]\n","\n","df_train[num_varsa] = scaler.fit_transform(df_train[num_varsa])\n","df_test[num_varsa] = scaler.fit_transform(df_test[num_varsa])"],"metadata":{"id":"18ft-IedzlfF","executionInfo":{"status":"ok","timestamp":1714968694364,"user_tz":240,"elapsed":9,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1978,"outputs":[]},{"cell_type":"code","source":["# Separate features and labels for training\n","X_train2 = df_train[num_varsa].values[:, :-1]\n","y_train2 = df_train['Loan_Status'].values\n","m_train2 = len(y_train2)\n","n_train2 = len(X_train2)"],"metadata":{"id":"2B9zyQSC0GPi","executionInfo":{"status":"ok","timestamp":1714968694364,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1979,"outputs":[]},{"cell_type":"code","source":["# Seperate features and labels for test\n","X_test2 = df_test[num_varsa].values[:, :-1]\n","y_test2 = df_test['Loan_Status'].values\n","m_test2 = len(y_test2)\n","n_test2 = len(X_test2)"],"metadata":{"id":"8CNftehH0KVh","executionInfo":{"status":"ok","timestamp":1714968694364,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1980,"outputs":[]},{"cell_type":"code","source":["# Initializing\n","X_0train2 = np.ones((m_train2,1))\n","X_0test2 = np.ones((m_test2,1))\n","\n","X_1train2 = X_train2.reshape(m_train2, 11)\n","X_1test2 = X_test2.reshape(m_test2, 11)\n","\n","Xtrain2 = np.hstack((X_0train2, X_1train2))\n","Xtest2 = np.hstack((X_0test2, X_1test2))\n","\n","theta2 = np.zeros(12)"],"metadata":{"id":"N1egkuBL0O-j","executionInfo":{"status":"ok","timestamp":1714968694364,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1981,"outputs":[]},{"cell_type":"code","source":["iterations2 =  1000\n","alpha2 = 0.1 # Alpha can be 0.001 or less for training model to work\n","theta, cost_history_train, cost_history_test = gradient_descent(Xtrain2, Xtest2, y_train2, y_test2, theta2, alpha2, iterations2)\n","\n","print(\"Final theta (first 10) =\", theta[:10])\n","print(\"Final cost history (first 10) =\", cost_history_train[:10], cost_history_test[:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eeouUSvd0aMs","executionInfo":{"status":"ok","timestamp":1714968694364,"user_tz":240,"elapsed":7,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"6f9871e2-7553-4b88-cdad-60abd8a05269"},"execution_count":1982,"outputs":[{"output_type":"stream","name":"stdout","text":["Final theta (first 10) = [ 9.62193288e-17  5.97825764e-02  1.25794484e-02 -1.49416140e-03\n","  1.08022985e-01 -2.93822048e-02  7.92485727e-03 -1.10614356e-01\n","  7.49016264e-02 -5.64210929e-02]\n","Final cost history (first 10) = [0.87324682 0.79614696 0.74820684 0.71791354 0.69853505 0.68601624\n"," 0.67786092 0.67250783 0.6689687  0.66661201] [0.88484516 0.81686743 0.77722735 0.75485668 0.74301901 0.73753655\n"," 0.73580082 0.73618668 0.73769131 0.73970654]\n"]}]},{"cell_type":"code","source":["plt.plot(cost_history_train, label=\"Training loss\")\n","plt.plot(cost_history_test, label=\"Validation loss\")\n","plt.xlabel(\"Iteration\")\n","plt.ylabel(\"Mean Squared Error\")\n","plt.legend()\n","plt.grid()\n","plt.title(\"Training and Validation Loss Over Iterations <Standardization>\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"jtRgn40p0igj","executionInfo":{"status":"ok","timestamp":1714968695211,"user_tz":240,"elapsed":853,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"9870b48d-6c7d-4683-af25-59eb1fca25f9"},"execution_count":1983,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 4. Confusion Matrix"],"metadata":{"id":"Jp-edxcqdWfq"}},{"cell_type":"code","source":["# Load the dataset\n","loan = pd.read_csv(file_path)\n","\n","# Mapping\n","loan['Loan_Status'] = loan['Loan_Status'].map({'yes': 1, 'no': 0})\n","loan['Property_Area'] = loan['Property_Area'].map({'Semirural': 2, 'Rural': 1, 'Urban': 0})\n","loan['Self_Employed'] = loan['Self_Employed'].map({'yes': 1, 'no': 0})\n","loan['Education'] = loan['Education'].map({'Graduate': 1, 'Not Graduate': 0})\n","loan['Married'] = loan['Married'].map({'yes': 1, 'no': 0})\n","loan['Gender'] = loan['Gender'].map({'Male': 1, 'Female': 0})\n","\n","# Cleaning dataset\n","loan = loan.dropna()\n","#Resetting index\n","loan.reset_index(drop=True, inplace=True)\n","\n","X= loan.drop(columns=['Loan_Status', 'Loano_ID'])\n","y = loan['Loan_Status']\n","\n","num_elements = loan.shape[0]\n","print(\"Number of elements remaining: \", num_elements) # We lose half of the elements\n","\n","loan.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"IPdvu-pZdaIW","executionInfo":{"status":"ok","timestamp":1714968695211,"user_tz":240,"elapsed":16,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"24a8f3d3-14da-4124-99e3-07dd1cc465fe"},"execution_count":1984,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of elements remaining:  185\n"]},{"output_type":"execute_result","data":{"text/plain":["   Loano_ID  Gender  Married  Dependents  Education  Self_Employed  \\\n","0  LP001003     1.0        1         1.0          1            0.0   \n","1  LP001005     1.0        1         0.0          1            1.0   \n","2  LP001006     1.0        1         0.0          0            0.0   \n","3  LP001008     1.0        0         0.0          1            0.0   \n","4  LP001013     1.0        1         0.0          0            0.0   \n","\n","   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0             4583             1508.0         128             360.0   \n","1             3000                0.0          66             360.0   \n","2             2583             2358.0         120             360.0   \n","3             6000                0.0         141             360.0   \n","4             2333             1516.0          95             360.0   \n","\n","   Credit_History  Property_Area  Loan_Status  \n","0             1.0            1.0            0  \n","1             1.0            0.0            1  \n","2             1.0            0.0            1  \n","3             1.0            0.0            1  \n","4             1.0            0.0            1  "],"text/html":["\n","  <div id=\"df-5766e951-c990-410d-adac-7739b464540b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loano_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001003</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001005</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001006</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001008</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001013</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2333</td>\n","      <td>1516.0</td>\n","      <td>95</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5766e951-c990-410d-adac-7739b464540b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5766e951-c990-410d-adac-7739b464540b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5766e951-c990-410d-adac-7739b464540b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d80f4e95-806d-4fe3-a87e-891c5c85fcfb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d80f4e95-806d-4fe3-a87e-891c5c85fcfb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d80f4e95-806d-4fe3-a87e-891c5c85fcfb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loan","summary":"{\n  \"name\": \"loan\",\n  \"rows\": 185,\n  \"fields\": [\n    {\n      \"column\": \"Loano_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 185,\n        \"samples\": [\n          \"LP001144\",\n          \"LP001535\",\n          \"LP002603\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3645579071767287,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Married\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0228011581757657,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Self_Employed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2818438533955056,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ApplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1603,\n        \"min\": 150,\n        \"max\": 9703,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          3069,\n          3033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CoapplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2710.446612096784,\n        \"min\": 0.0,\n        \"max\": 33837.0,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          1255.0,\n          3333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LoanAmount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 9,\n        \"max\": 150,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          88,\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Amount_Term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.01681193031649,\n        \"min\": 60.0,\n        \"max\": 480.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.0,\n          240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_History\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37449535178375454,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Property_Area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.500117495008084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1984}]},{"cell_type":"code","source":["# Splitting the dataset into training and testing sets\n","np.random.seed(0)\n","X_train3, X_test3, y_train3, y_test3 = train_test_split(X, y, train_size = 0.7, test_size = 0.3, random_state = 40)\n","\n","# Normalizing data\n","scaler = StandardScaler()\n","\n","X_train = scaler.fit_transform(X_train3)\n","X_test = scaler.fit_transform(X_test3)"],"metadata":{"id":"aNEY-tUceDxe","executionInfo":{"status":"ok","timestamp":1714968695211,"user_tz":240,"elapsed":13,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1985,"outputs":[]},{"cell_type":"code","source":["# Logistic Regression\n","def perform_logistic_regression(x_train, y_train, x_test, y_test):\n","    \"\"\"\n","    Performs logistic regression, making predictions and creating a confusion matrix.\n","    Also prints the accuracy, precision, recall, and F1 score.\n","\n","    Parameters:\n","    x_train : The input data from the training set\n","    y_train : The output data from the training set\n","    x_test : The input data from the test set\n","    y_test : The output data from the test set\n","\n","    Returns:\n","    cnf_matrix : A 2D array containing true negative, false positive, false negative, and true positive (in that order)\n","    \"\"\"\n","    classifier = LogisticRegression(random_state=100)\n","    classifier.fit(x_train, y_train)\n","\n","    # Make predictions\n","    y_pred = classifier.predict(x_test)\n","\n","    # Find confusion matrix\n","    cnf_matrix = confusion_matrix(y_test, y_pred)\n","    cnf_matrix\n","\n","    # Find accuracy, precision, and recall\n","    print(\"Accuracy:\", metrics.accuracy_score(y_test, y_pred))\n","    print(\"Precision:\", metrics.precision_score(y_test, y_pred))\n","    print(\"Recall:\", metrics.recall_score(y_test, y_pred))\n","    print(\"F1 Score:\", metrics.f1_score(y_test, y_pred))\n","\n","    return cnf_matrix"],"metadata":{"id":"C5gysqbegz7a","executionInfo":{"status":"ok","timestamp":1714968695211,"user_tz":240,"elapsed":13,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1986,"outputs":[]},{"cell_type":"code","source":["# Confusion Matrix\n","def plot_confusion_matrix(confusion_matrix, neg_label, pos_label):\n","    \"\"\"\n","    Plots the confusion matrix.\n","\n","    Parameters:\n","    confusion_matrix: The 4 values for true negative, false positive, false negative, and true positive (in that order)\n","    \"\"\"\n","    # Visualize the confusion matrix using a heatmap\n","    class_names=[neg_label, pos_label] # Name  of classes\n","    fig, ax = plt.subplots()\n","    tick_marks = np.arange(len(class_names))\n","    plt.xticks(tick_marks)\n","    plt.yticks(tick_marks)\n","\n","    # Create heatmap\n","    sns.heatmap(pd.DataFrame(confusion_matrix), annot=True, cmap=\"YlGnBu\" ,fmt='g')\n","    ax.xaxis.set_label_position(\"top\")\n","    ax.set_xticklabels(class_names)\n","    ax.set_yticklabels(class_names)\n","    plt.tight_layout()\n","    plt.title('Confusion matrix', y=1.1)\n","    plt.ylabel('Actual label')\n","    plt.xlabel('Predicted label')"],"metadata":{"id":"lKL6HxeOg5Ta","executionInfo":{"status":"ok","timestamp":1714968695211,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1987,"outputs":[]},{"cell_type":"code","source":["# Performing logistic regression and returning with confusion matrix\n","confusion_matrix4 = perform_logistic_regression(X_train, y_train, X_test, y_test)\n","\n","# Plotting confusion matrix\n","plot_confusion_matrix(confusion_matrix4, neg_label='Denied', pos_label='Accepted')\n","\n","#   In terms of Lender\n","# False acceptance could lead to granting loans to applicants who are not creditworthy. This could result in default or financial losses for lender.\n","# False deny could result in a loss of potential customers who are not creditworthy.\n","\n","#   In terms of Lendy\n","# False acceptance could have the applicant in a position to accumulate debt that they can not repay.\n","# False deny could result in missed oppertunity for financing important purcahses or investments."],"metadata":{"id":"wWk3X0R1g-8J","executionInfo":{"status":"ok","timestamp":1714968695877,"user_tz":240,"elapsed":678,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":620},"outputId":"41ad2ca2-9b20-4bd5-b41f-b51da754158e"},"execution_count":1988,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.6428571428571429\n","Precision: 0.7111111111111111\n","Recall: 0.8205128205128205\n","F1 Score: 0.7619047619047619\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 5. Adding a penalty parameter"],"metadata":{"id":"bCjcleR5vej0"}},{"cell_type":"code","source":["# Adding penalty parameters\n","C = [50, 20, 10, 1, 0.1, 0.01]\n","\n","# Reinitializing values from previous normalization\n","X_train5 = X_train\n","X_test5 = X_test\n","y_train5 = y_train3\n","y_test5 = y_test3\n","\n","for c in C:\n","    clf = LogisticRegression(penalty='l1', C=c, solver='liblinear')\n","    clf.fit(X_train5, y_train5)\n","    print('C:', c)\n","    print('Training accuracy:\\t%5.4f' %clf.score(X_train5, y_train5))\n","    print('Test accuracy:\\t\\t%5.4f' %clf.score(X_test5, y_test5))\n","    print('')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeV5TGZDvhXX","executionInfo":{"status":"ok","timestamp":1714968695877,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"f721dce3-ac07-4704-f76a-4ff69128f5ab"},"execution_count":1989,"outputs":[{"output_type":"stream","name":"stdout","text":["C: 50\n","Training accuracy:\t0.8062\n","Test accuracy:\t\t0.7321\n","\n","C: 20\n","Training accuracy:\t0.8062\n","Test accuracy:\t\t0.7321\n","\n","C: 10\n","Training accuracy:\t0.8062\n","Test accuracy:\t\t0.7500\n","\n","C: 1\n","Training accuracy:\t0.7984\n","Test accuracy:\t\t0.7857\n","\n","C: 0.1\n","Training accuracy:\t0.7907\n","Test accuracy:\t\t0.7857\n","\n","C: 0.01\n","Training accuracy:\t0.3178\n","Test accuracy:\t\t0.4464\n","\n"]}]},{"cell_type":"code","source":["# Selecting best penalty and continuing the log regression\n","# Both C: 1 and C: 0.1 are the same ---- Using 1\n","clf = LogisticRegression(penalty='l1', C=1, solver='liblinear')\n","clf.fit(X_train5, y_train5)\n","y_pred = clf.predict(X_test5)\n","\n","# Find accuracy, precision, and recall\n","print(\"Accuracy:\", metrics.accuracy_score(y_test5, y_pred))\n","print(\"Precision:\", metrics.precision_score(y_test5, y_pred))\n","print(\"Recall:\", metrics.recall_score(y_test5, y_pred))\n","print(\"F1 Score:\", metrics.f1_score(y_test5, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MX7bKKrAw_R9","executionInfo":{"status":"ok","timestamp":1714968695878,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"94ba7da5-e6ff-470b-d050-c212d2640c6d"},"execution_count":1990,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.7857142857142857\n","Precision: 0.7209302325581395\n","Recall: 1.0\n","F1 Score: 0.8378378378378378\n"]}]},{"cell_type":"code","source":["confusion_matrix5 = confusion_matrix(y_test5, y_pred)\n","\n","# Plotting confusion matrix\n","plot_confusion_matrix(confusion_matrix5, neg_label='Denied', pos_label='Accepted')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"id":"eDv-e8emxuqk","executionInfo":{"status":"ok","timestamp":1714968696666,"user_tz":240,"elapsed":794,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"46593339-9e86-48c3-935b-f7e507c3cc41"},"execution_count":1991,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 6. Using Naive Bayesian"],"metadata":{"id":"UC5TynvW4AxH"}},{"cell_type":"code","source":["readline.clear_history()\n","\n","# Load the dataset\n","loan = pd.read_csv(file_path)\n","\n","# Mapping\n","loan['Loan_Status'] = loan['Loan_Status'].map({'yes': 1, 'no': 0})\n","loan['Property_Area'] = loan['Property_Area'].map({'Semirural': 2, 'Rural': 1, 'Urban': 0})\n","loan['Self_Employed'] = loan['Self_Employed'].map({'yes': 1, 'no': 0})\n","loan['Education'] = loan['Education'].map({'Graduate': 1, 'Not Graduate': 0})\n","loan['Married'] = loan['Married'].map({'yes': 1, 'no': 0})\n","loan['Gender'] = loan['Gender'].map({'Male': 1, 'Female': 0})\n","\n","# Cleaning dataset\n","loan = loan.dropna()\n","#Resetting index\n","loan.reset_index(drop=True, inplace=True)\n","\n","X= loan.drop(columns=['Loan_Status', 'Loano_ID'])\n","y = loan['Loan_Status']\n","\n","num_elements = loan.shape[0]\n","print(\"Number of elements remaining: \", num_elements) # We lose half of the elements\n","\n","loan.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"zq4-0VnM4Qf4","executionInfo":{"status":"ok","timestamp":1714968696667,"user_tz":240,"elapsed":10,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"outputId":"c5f36248-30d7-4cee-890c-c5593e6a9f36"},"execution_count":1992,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of elements remaining:  185\n"]},{"output_type":"execute_result","data":{"text/plain":["   Loano_ID  Gender  Married  Dependents  Education  Self_Employed  \\\n","0  LP001003     1.0        1         1.0          1            0.0   \n","1  LP001005     1.0        1         0.0          1            1.0   \n","2  LP001006     1.0        1         0.0          0            0.0   \n","3  LP001008     1.0        0         0.0          1            0.0   \n","4  LP001013     1.0        1         0.0          0            0.0   \n","\n","   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0             4583             1508.0         128             360.0   \n","1             3000                0.0          66             360.0   \n","2             2583             2358.0         120             360.0   \n","3             6000                0.0         141             360.0   \n","4             2333             1516.0          95             360.0   \n","\n","   Credit_History  Property_Area  Loan_Status  \n","0             1.0            1.0            0  \n","1             1.0            0.0            1  \n","2             1.0            0.0            1  \n","3             1.0            0.0            1  \n","4             1.0            0.0            1  "],"text/html":["\n","  <div id=\"df-400c08d8-f9db-4b42-8b08-ed7fab90fda0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loano_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001003</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001005</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001006</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001008</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001013</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2333</td>\n","      <td>1516.0</td>\n","      <td>95</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-400c08d8-f9db-4b42-8b08-ed7fab90fda0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-400c08d8-f9db-4b42-8b08-ed7fab90fda0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-400c08d8-f9db-4b42-8b08-ed7fab90fda0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3d6b2328-2d42-4185-836a-de5639b48997\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d6b2328-2d42-4185-836a-de5639b48997')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3d6b2328-2d42-4185-836a-de5639b48997 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loan","summary":"{\n  \"name\": \"loan\",\n  \"rows\": 185,\n  \"fields\": [\n    {\n      \"column\": \"Loano_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 185,\n        \"samples\": [\n          \"LP001144\",\n          \"LP001535\",\n          \"LP002603\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3645579071767287,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Married\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0228011581757657,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Self_Employed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2818438533955056,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ApplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1603,\n        \"min\": 150,\n        \"max\": 9703,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          3069,\n          3033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CoapplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2710.446612096784,\n        \"min\": 0.0,\n        \"max\": 33837.0,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          1255.0,\n          3333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LoanAmount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 9,\n        \"max\": 150,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          88,\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Amount_Term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.01681193031649,\n        \"min\": 60.0,\n        \"max\": 480.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.0,\n          240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_History\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37449535178375454,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Property_Area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.500117495008084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1992}]},{"cell_type":"code","source":["# Splitting into training and validation sets\n","X_train6, X_test6, y_train6, y_test6 = train_test_split(X, y, train_size = 0.7, test_size = 0.3, random_state = 200)\n","\n","# Creating Gaussian classifier\n","classifier = GaussianNB()\n","classifier.fit(X_train6, y_train6)\n","y_pred6 = classifier.predict(X_test6)"],"metadata":{"id":"vDYNxnAz4FxX","executionInfo":{"status":"ok","timestamp":1714968696667,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1993,"outputs":[]},{"cell_type":"code","source":["# Find accuracy, precision, and recall\n","print(\"Accuracy:\", metrics.accuracy_score(y_test6, y_pred6))\n","print(\"Precision:\", metrics.precision_score(y_test6, y_pred6))\n","print(\"Recall:\", metrics.recall_score(y_test6, y_pred6))\n","print(\"F1 Score:\", metrics.f1_score(y_test6, y_pred6))"],"metadata":{"id":"TA8k3h-Y5rU1","executionInfo":{"status":"ok","timestamp":1714968696667,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"b94c2c96-43ba-444b-da41-63881f9e4563"},"execution_count":1994,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.7857142857142857\n","Precision: 0.7380952380952381\n","Recall: 0.96875\n","F1 Score: 0.8378378378378379\n"]}]},{"cell_type":"code","source":["# Find confusion matrix\n","confusion_matrix_6 = confusion_matrix(y_test6, y_pred6)\n","\n","# Plot confusion matrix\n","plot_confusion_matrix(confusion_matrix_6, neg_label='Denied', pos_label='Accepted')"],"metadata":{"id":"oq2gMc3d6Cff","executionInfo":{"status":"ok","timestamp":1714968697226,"user_tz":240,"elapsed":565,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":551},"outputId":"d6b2dc6f-c1d7-4c0f-cdcc-a1ff1cb16d3b"},"execution_count":1995,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 7. Logistic Regression using PCA feature extraction for training"],"metadata":{"id":"TaYFv3c56uX4"}},{"cell_type":"code","source":["# Load the dataset\n","loan = pd.read_csv(file_path)\n","\n","# Mapping\n","loan['Loan_Status'] = loan['Loan_Status'].map({'yes': 1, 'no': 0})\n","loan['Property_Area'] = loan['Property_Area'].map({'Semirural': 2, 'Rural': 1, 'Urban': 0})\n","loan['Self_Employed'] = loan['Self_Employed'].map({'yes': 1, 'no': 0})\n","loan['Education'] = loan['Education'].map({'Graduate': 1, 'Not Graduate': 0})\n","loan['Married'] = loan['Married'].map({'yes': 1, 'no': 0})\n","loan['Gender'] = loan['Gender'].map({'Male': 1, 'Female': 0})\n","\n","# Cleaning dataset\n","loan = loan.dropna()\n","#Resetting index\n","loan.reset_index(drop=True, inplace=True)\n","\n","X= loan.drop(columns=['Loan_Status', 'Loano_ID'])\n","y = loan['Loan_Status']\n","\n","num_elements = loan.shape[0]\n","print(\"Number of elements remaining: \", num_elements) # We lose half of the elements\n","\n","loan.head()"],"metadata":{"id":"rhJBmwjr6zBc","executionInfo":{"status":"ok","timestamp":1714968697227,"user_tz":240,"elapsed":10,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":224},"outputId":"c4248d7b-68d7-4195-e1f7-cd3bc79e713d"},"execution_count":1996,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of elements remaining:  185\n"]},{"output_type":"execute_result","data":{"text/plain":["   Loano_ID  Gender  Married  Dependents  Education  Self_Employed  \\\n","0  LP001003     1.0        1         1.0          1            0.0   \n","1  LP001005     1.0        1         0.0          1            1.0   \n","2  LP001006     1.0        1         0.0          0            0.0   \n","3  LP001008     1.0        0         0.0          1            0.0   \n","4  LP001013     1.0        1         0.0          0            0.0   \n","\n","   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0             4583             1508.0         128             360.0   \n","1             3000                0.0          66             360.0   \n","2             2583             2358.0         120             360.0   \n","3             6000                0.0         141             360.0   \n","4             2333             1516.0          95             360.0   \n","\n","   Credit_History  Property_Area  Loan_Status  \n","0             1.0            1.0            0  \n","1             1.0            0.0            1  \n","2             1.0            0.0            1  \n","3             1.0            0.0            1  \n","4             1.0            0.0            1  "],"text/html":["\n","  <div id=\"df-9485af75-c393-44c4-911c-65d44894e1e0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loano_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001003</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001005</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001006</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001008</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001013</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2333</td>\n","      <td>1516.0</td>\n","      <td>95</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9485af75-c393-44c4-911c-65d44894e1e0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9485af75-c393-44c4-911c-65d44894e1e0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9485af75-c393-44c4-911c-65d44894e1e0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3dae2360-79f7-4e7a-a2a5-ae1142454a57\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3dae2360-79f7-4e7a-a2a5-ae1142454a57')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3dae2360-79f7-4e7a-a2a5-ae1142454a57 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loan","summary":"{\n  \"name\": \"loan\",\n  \"rows\": 185,\n  \"fields\": [\n    {\n      \"column\": \"Loano_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 185,\n        \"samples\": [\n          \"LP001144\",\n          \"LP001535\",\n          \"LP002603\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3645579071767287,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Married\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0228011581757657,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Self_Employed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2818438533955056,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ApplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1603,\n        \"min\": 150,\n        \"max\": 9703,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          3069,\n          3033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CoapplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2710.446612096784,\n        \"min\": 0.0,\n        \"max\": 33837.0,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          1255.0,\n          3333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LoanAmount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 9,\n        \"max\": 150,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          88,\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Amount_Term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.01681193031649,\n        \"min\": 60.0,\n        \"max\": 480.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.0,\n          240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_History\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37449535178375454,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Property_Area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.500117495008084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1996}]},{"cell_type":"code","source":["# Perform standardization\n","X7 = MinMaxScaler().fit_transform(X)"],"metadata":{"id":"R-an7vFF62gM","executionInfo":{"status":"ok","timestamp":1714968697227,"user_tz":240,"elapsed":8,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":1997,"outputs":[]},{"cell_type":"code","source":["#User Interactive\n","\n","def predict_loan_approval(classifier):\n","    print(\"Please enter the following details:\")\n","    gender = input(\"Gender (Male/Female): \")\n","    married = input(\"Married (Yes/No): \")\n","    dependents = int(input(\"Dependents: \"))\n","    education = input(\"Education (Graduate/Not Graduate): \")\n","    self_employed = input(\"Self Employed (Yes/No): \")\n","    applicant_income = float(input(\"Applicant Income: \"))\n","    coapplicant_income = float(input(\"Coapplicant Income: \"))\n","    loan_amount = float(input(\"Loan Amount: \"))\n","    loan_amount_term = float(input(\"Loan Amount Term (in months): \"))\n","    credit_history = input(\"Credit History (1 for Yes, 0 for No): \")\n","    property_area = input(\"Property Area (Urban/Rural/Semirural): \")\n","\n","    # Mapping user input to numerical values\n","    gender = 1 if gender.lower() == 'male' else 0\n","    married = 1 if married.lower() == 'yes' else 0\n","    education = 1 if education.lower() == 'graduate' else 0\n","    self_employed = 1 if self_employed.lower() == 'yes' else 0\n","    credit_history = int(credit_history)\n","    property_area_map = {'urban': 0, 'rural': 1, 'semirural': 2}\n","    property_area = property_area_map.get(property_area.lower())\n","\n","    # Predicting loan approval\n","    user_data = [[gender, married, dependents, education, self_employed,\n","                  applicant_income, coapplicant_income, loan_amount,\n","                  loan_amount_term, credit_history, property_area]]\n","    result = classifier.predict(user_data)\n","\n","    if result[0] == 1:\n","        print(\"Congratulations! Your loan has been approved.\")\n","    else:\n","        print(\"Sorry, your loan has been denied.\")\n","\n","# Call the function to predict loan approval\n","predict_loan_approval(classifier)"],"metadata":{"id":"elCaz0NV67Hk","executionInfo":{"status":"ok","timestamp":1714968698183,"user_tz":240,"elapsed":963,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"3f130e63-9c8d-4041-e641-868b669b00dc"},"execution_count":1998,"outputs":[{"output_type":"stream","name":"stdout","text":["K = 1:\n","Accuracy: 0.6756756756756757\n","Precision: 0.6756756756756757\n","Recall: 1.0\n","F1 Score: 0.8064516129032258\n","\n","\n","K = 2:\n","Accuracy: 0.6756756756756757\n","Precision: 0.6756756756756757\n","Recall: 1.0\n","F1 Score: 0.8064516129032258\n","\n","\n","K = 3:\n","Accuracy: 0.6756756756756757\n","Precision: 0.696969696969697\n","Recall: 0.92\n","F1 Score: 0.793103448275862\n","\n","\n","K = 4:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 5:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 6:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 7:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 8:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 9:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 10:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n","K = 11:\n","Accuracy: 0.8108108108108109\n","Precision: 0.78125\n","Recall: 1.0\n","F1 Score: 0.8771929824561403\n","\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plot confusion matrix\n","plot_confusion_matrix(cnf_matrix_7, neg_label='Denied', pos_label='Accepted')"],"metadata":{"id":"Jc90AaDR93Qi","executionInfo":{"status":"ok","timestamp":1714968698435,"user_tz":240,"elapsed":254,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":545},"outputId":"07a8f5ed-e2d5-4d16-e513-b52bf4202748"},"execution_count":1999,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 8. Bayesian classifier using PCA feature extraction for training"],"metadata":{"id":"MdwNiYRG-7uY"}},{"cell_type":"code","source":["# Load the dataset\n","loan = pd.read_csv(file_path)\n","\n","# Mapping\n","loan['Loan_Status'] = loan['Loan_Status'].map({'yes': 1, 'no': 0})\n","loan['Property_Area'] = loan['Property_Area'].map({'Semirural': 2, 'Rural': 1, 'Urban': 0})\n","loan['Self_Employed'] = loan['Self_Employed'].map({'yes': 1, 'no': 0})\n","loan['Education'] = loan['Education'].map({'Graduate': 1, 'Not Graduate': 0})\n","loan['Married'] = loan['Married'].map({'yes': 1, 'no': 0})\n","loan['Gender'] = loan['Gender'].map({'Male': 1, 'Female': 0})\n","\n","# Cleaning dataset\n","loan = loan.dropna()\n","#Resetting index\n","loan.reset_index(drop=True, inplace=True)\n","\n","X= loan.drop(columns=['Loan_Status', 'Loano_ID'])\n","y = loan['Loan_Status']\n","\n","num_elements = loan.shape[0]\n","print(\"Number of elements remaining: \", num_elements) # We lose half of the elements\n","\n","loan.head()\n"],"metadata":{"id":"XbTWVCUI_Irr","executionInfo":{"status":"ok","timestamp":1714968698436,"user_tz":240,"elapsed":12,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":224},"outputId":"fd292340-3465-4ab6-d71c-06d1235453ba"},"execution_count":2000,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of elements remaining:  185\n"]},{"output_type":"execute_result","data":{"text/plain":["   Loano_ID  Gender  Married  Dependents  Education  Self_Employed  \\\n","0  LP001003     1.0        1         1.0          1            0.0   \n","1  LP001005     1.0        1         0.0          1            1.0   \n","2  LP001006     1.0        1         0.0          0            0.0   \n","3  LP001008     1.0        0         0.0          1            0.0   \n","4  LP001013     1.0        1         0.0          0            0.0   \n","\n","   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0             4583             1508.0         128             360.0   \n","1             3000                0.0          66             360.0   \n","2             2583             2358.0         120             360.0   \n","3             6000                0.0         141             360.0   \n","4             2333             1516.0          95             360.0   \n","\n","   Credit_History  Property_Area  Loan_Status  \n","0             1.0            1.0            0  \n","1             1.0            0.0            1  \n","2             1.0            0.0            1  \n","3             1.0            0.0            1  \n","4             1.0            0.0            1  "],"text/html":["\n","  <div id=\"df-83d3c451-5959-4d4c-b0b0-2b28fb596d20\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loano_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001003</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001005</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001006</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001008</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001013</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2333</td>\n","      <td>1516.0</td>\n","      <td>95</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83d3c451-5959-4d4c-b0b0-2b28fb596d20')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-83d3c451-5959-4d4c-b0b0-2b28fb596d20 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-83d3c451-5959-4d4c-b0b0-2b28fb596d20');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-27c4f71c-eb88-4cce-af34-f7210af33a0f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27c4f71c-eb88-4cce-af34-f7210af33a0f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-27c4f71c-eb88-4cce-af34-f7210af33a0f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loan","summary":"{\n  \"name\": \"loan\",\n  \"rows\": 185,\n  \"fields\": [\n    {\n      \"column\": \"Loano_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 185,\n        \"samples\": [\n          \"LP001144\",\n          \"LP001535\",\n          \"LP002603\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3645579071767287,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Married\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0228011581757657,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Self_Employed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2818438533955056,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ApplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1603,\n        \"min\": 150,\n        \"max\": 9703,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          3069,\n          3033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CoapplicantIncome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2710.446612096784,\n        \"min\": 0.0,\n        \"max\": 33837.0,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          1255.0,\n          3333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LoanAmount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 9,\n        \"max\": 150,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          88,\n          128\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Amount_Term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.01681193031649,\n        \"min\": 60.0,\n        \"max\": 480.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.0,\n          240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_History\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37449535178375454,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Property_Area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.500117495008084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loan_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2000}]},{"cell_type":"code","source":["# Perform standardization\n","X8 = MinMaxScaler().fit_transform(X)"],"metadata":{"id":"AmkXnP5w_Jta","executionInfo":{"status":"ok","timestamp":1714968722140,"user_tz":240,"elapsed":16,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}}},"execution_count":2002,"outputs":[]},{"cell_type":"code","source":["# Select N values from 1 to 11\n","N = [i for i in range(1, 12)]\n","\n","# Initialize lists to store metrics\n","accuracy_list = []\n","precision_list = []\n","recall_list = []\n","f1_score_list = []\n","\n","for K in N:\n","    # Perform PCA\n","    pca = PCA(n_components=K)\n","    principalDf = pd.DataFrame(data=pca.fit_transform(X8))\n","\n","    # Split the data into training and validation sets\n","    X_train8, X_test8, y_train8, y_test8 = train_test_split(principalDf.values, y, train_size=0.7, test_size=0.3, random_state=80)\n","\n","    # Perform Gaussian Naive Bayes classification\n","    classifier = GaussianNB()\n","    classifier.fit(X_train8, y_train8)\n","\n","    # Make predictions and find confusion matrix\n","    y_pred8 = classifier.predict(X_test8)\n","    cnf_matrix_8 = confusion_matrix(y_test8, y_pred8)\n","\n","    # Find accuracy, precision, recall, and F1 score\n","    accuracy = metrics.accuracy_score(y_test8, y_pred8)\n","    precision = metrics.precision_score(y_test8, y_pred8)\n","    recall = metrics.recall_score(y_test8, y_pred8)\n","    f1_score = metrics.f1_score(y_test8, y_pred8)\n","\n","    # Append metrics to respective lists\n","    accuracy_list.append(accuracy)\n","    precision_list.append(precision)\n","    recall_list.append(recall)\n","    f1_score_list.append(f1_score)\n","\n","    print(f\"K = {K}:\")\n","    print(\"Accuracy:\", accuracy)\n","    print(\"Precision:\", precision)\n","    print(\"Recall:\", recall)\n","    print(\"F1 Score:\", f1_score)\n","    print('\\n')\n","\n","# Plotting the metrics\n","plt.plot(N, accuracy_list, label='Accuracy')\n","plt.plot(N, precision_list, label='Precision')\n","plt.plot(N, recall_list, label='Recall')\n","plt.plot(N, f1_score_list, label='F1 Score')\n","\n","plt.xlabel('Number of Components (K)')\n","plt.ylabel('Score')\n","plt.title('Classification Metrics vs. Number of Components')\n","plt.legend()\n","plt.show()\n"],"metadata":{"id":"HiOMypGV_NqO","executionInfo":{"status":"ok","timestamp":1714968722651,"user_tz":240,"elapsed":527,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"daf2bf8c-3ae9-4596-81fa-16ca1a8afb6c"},"execution_count":2003,"outputs":[{"output_type":"stream","name":"stdout","text":["K = 1:\n","Accuracy: 0.6607142857142857\n","Precision: 0.6607142857142857\n","Recall: 1.0\n","F1 Score: 0.7956989247311829\n","\n","\n","K = 2:\n","Accuracy: 0.625\n","Precision: 0.6481481481481481\n","Recall: 0.9459459459459459\n","F1 Score: 0.7692307692307693\n","\n","\n","K = 3:\n","Accuracy: 0.6607142857142857\n","Precision: 0.6875\n","Recall: 0.8918918918918919\n","F1 Score: 0.7764705882352941\n","\n","\n","K = 4:\n","Accuracy: 0.8035714285714286\n","Precision: 0.7708333333333334\n","Recall: 1.0\n","F1 Score: 0.8705882352941177\n","\n","\n","K = 5:\n","Accuracy: 0.7857142857142857\n","Precision: 0.7777777777777778\n","Recall: 0.9459459459459459\n","F1 Score: 0.8536585365853658\n","\n","\n","K = 6:\n","Accuracy: 0.7857142857142857\n","Precision: 0.7777777777777778\n","Recall: 0.9459459459459459\n","F1 Score: 0.8536585365853658\n","\n","\n","K = 7:\n","Accuracy: 0.8035714285714286\n","Precision: 0.782608695652174\n","Recall: 0.972972972972973\n","F1 Score: 0.8674698795180723\n","\n","\n","K = 8:\n","Accuracy: 0.8035714285714286\n","Precision: 0.782608695652174\n","Recall: 0.972972972972973\n","F1 Score: 0.8674698795180723\n","\n","\n","K = 9:\n","Accuracy: 0.8035714285714286\n","Precision: 0.782608695652174\n","Recall: 0.972972972972973\n","F1 Score: 0.8674698795180723\n","\n","\n","K = 10:\n","Accuracy: 0.8035714285714286\n","Precision: 0.782608695652174\n","Recall: 0.972972972972973\n","F1 Score: 0.8674698795180723\n","\n","\n","K = 11:\n","Accuracy: 0.8035714285714286\n","Precision: 0.7708333333333334\n","Recall: 1.0\n","F1 Score: 0.8705882352941177\n","\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plot confusion matrix\n","plot_confusion_matrix(cnf_matrix_8, neg_label='Denied', pos_label='Accepted')"],"metadata":{"id":"L8L7M1SS_y7A","executionInfo":{"status":"ok","timestamp":1714968723288,"user_tz":240,"elapsed":643,"user":{"displayName":"Zach Matheson","userId":"07035067349780023955"}},"colab":{"base_uri":"https://localhost:8080/","height":551},"outputId":"4be376b8-0d6f-424a-8b14-7103e63c3008"},"execution_count":2004,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Function to collect user input for questionnaire\n","def get_user_input():\n","    gender = input(\"Gender (Male/Female): \").capitalize()\n","    married = input(\"Married (Yes/No): \").capitalize()\n","    dependents = int(input(\"Number of Dependents: \"))\n","    education = input(\"Education (Graduate/Not Graduate): \").capitalize()\n","    self_employed = input(\"Self Employed (Yes/No): \").capitalize()\n","    applicant_income = float(input(\"Applicant Income: \"))\n","    coapplicant_income = float(input(\"Coapplicant Income: \"))\n","    loan_amount = float(input(\"Loan Amount: \"))\n","    loan_amount_term = float(input(\"Loan Amount Term: \"))\n","    credit_history = float(input(\"Credit History (0 or 1): \"))\n","    property_area = input(\"Property Area (Semirural/Rural/Urban): \").capitalize()\n","\n","    return gender, married, dependents, education, self_employed, applicant_income, coapplicant_income, loan_amount, loan_amount_term, credit_history, property_area\n","\n","# Collect user input\n","gender, married, dependents, education, self_employed, applicant_income, coapplicant_income, loan_amount, loan_amount_term, credit_history, property_area = get_user_input()\n","\n","# Convert user input to numeric values based on mappings\n","gender = 1 if gender == 'Male' else 0\n","married = 1 if married == 'Yes' else 0\n","education = 1 if education == 'Graduate' else 0\n","self_employed = 1 if self_employed == 'Yes' else 0\n","property_area = {'Semirural': 2, 'Rural': 1, 'Urban': 0}[property_area]\n","\n","# Perform PCA on user input\n","input_data = [[gender, married, dependents, education, self_employed, applicant_income, coapplicant_income, loan_amount, loan_amount_term, credit_history, property_area]]\n","input_data_pca = pca.transform(input_data)\n","\n","# Predict using Gaussian Naive Bayes classifier\n","prediction = classifier.predict(input_data_pca)\n","\n","# Output prediction\n","print(\"Loan Approval Prediction:\", \"Approved\" if prediction[0] == 1 else \"Denied\")"],"metadata":{"id":"OQcKY3fVGjLq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["END"],"metadata":{"id":"OrNNllETSPvX"}}]}